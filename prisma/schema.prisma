generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  COMMON_USER
  VIP_USER
}

enum UserStatus {
  ACTIVE
  INACTIVE
  BANNED
}

enum ActivityType {
  CLUB
  COMPETITION
  VOLUNTEER
  OTHER
}

enum ResearchResultType {
  PAPER
  PATENT
  CONFERENCE
  OTHER
}

enum PublicationType {
  JOURNAL
  CONFERENCE
  BOOK
  OTHER
}

enum SkillCategory {
  LANGUAGE
  PROGRAMMING
  DESIGN
  BUSINESS
  OTHER
}

enum SkillLevel {
  BEGINNER
  INTERMEDIATE
  ADVANCED
  EXPERT
}

model User {
  id          String    @id @default(cuid())
  username    String
  email       String    @unique
  password    String
  salt        String?
  role        UserRole  @default(COMMON_USER)
  status      UserStatus @default(ACTIVE)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  lastLoginAt DateTime?

}


model Profile {
  id           String   @id @default(cuid())
  userId       String  
  name         String?
  birthday     String?
  gender       String?
  website      String?
  title        String?
  email        String?
  phone        String?
  location     String?
  avatar       String?
  summary      String?
  customFields Json[]   // CustomField[]
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@index([userId])
}

model Education {
  id          String   @id @default(cuid()) 
  userId      String
  school      String
  degree      String?
  startDate   String?
  endDate     String?
  gpa         String?
  location    String?
  courses     String?
  photos      String[]
  major       String?
  summary      String?
  customFields Json[]   // CustomField[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([userId])
}


model Student {
  id           String                @id @default(cuid())
  userId       String
  educationId  String?  
  activityName String                // 活动/项目名称
  organization String?                // 组织/社团名称
  role         String?                // 担任角色
  startDate    String?
  endDate      String?
  description  String?               // 详细描述
  achievement  String?               // 成就/获奖
  activityType ActivityType @default(OTHER)  // 经历类型
  photos       String[]              // 照片URL
  summary      String?               // 简要总结
  customFields Json[]                // CustomField[]
  createdAt    DateTime              @default(now())
  updatedAt    DateTime              @updatedAt

  @@index([userId])
}

model Work {
  id          String   @id @default(cuid())
  userId      String
  company     String
  title       String
  location    String?
  startDate   String?
  endDate     String?
  position    String?
  photos      String[]
  summary     String?
  customFields Json[]   // CustomField[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([userId])
}

model Project {
  id          String   @id @default(cuid())
  userId      String
  workId      String?
  name        String
  company     String? 
  role        String?
  startDate   String?
  endDate     String?
  description String?
  techStack   String?
  achievement String?
  photos      String[]
  summary     String?
  customFields Json[]   // CustomField[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([userId])
}

model Skill {
  id          String   @id @default(cuid())
  userId      String
  name        String
  category    SkillCategory?
  level       SkillLevel?
  certDate    String?
  certName    String?
  certOrg     String?
  photos      String[]
  summary     String?
  customFields Json[]   // CustomField[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([userId])
}

model Portfolio {
  id          String   @id @default(cuid()) 
  userId      String
  name        String
  date        String?
  description String?
  photos      String[]
  summary     String?
  customFields Json[]   // CustomField[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([userId])
}

model Award {
  id          String   @id @default(cuid())
  userId      String
  name        String
  level       String?
  issuer      String?
  acquireDate String?
  photos      String[]
  ranking     String?
  participants String?
  summary     String?
  customFields Json[]   // CustomField[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([userId])
}

model Research {
  id          String   @id @default(cuid())
  userId      String
  direction   String
  institution String
  role        String
  startDate   String?
  endDate     String?
  photos      String[]
  summary     String?
  customFields Json[]   // CustomField[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([userId])
}

model ResearchResult {
  id          String   @id @default(cuid())
  userId      String
  researchId  String?
  type        ResearchResultType
  name        String
  role        String?
  date        String?
  photos      String[]
  summary     String?
  customFields Json[]   // CustomField[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([researchId])
}

model Certificate {
  id          String   @id @default(cuid())
  userId      String
  name        String
  issuer      String
  date        String?
  level       String?
  number      String?
  photos      String[]
  summary     String?
  customFields Json[]   // CustomField[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([userId])
}   


model Language {
  id          String   @id @default(cuid())
  userId      String
  name        String
  level       String
  certificate String?
  acquireDate String?
  photos      String[]
  score       String?
  validPeriod String?
  summary     String?
  customFields Json[]   // CustomField[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([userId])
}

model Hobby {
  id          String   @id @default(cuid())
  userId      String
  name        String
  cover       String?
  photos      String[]
  description String?
  startDate   String?
  summary     String?
  customFields Json[]   // CustomField[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([userId])
}

model Publication {
  id          String   @id @default(cuid())
  userId      String
  name        String
  type        PublicationType
  publishDate String?
  journal     String?
  database    String?
  photos      String[]
  summary     String?
  customFields Json[]   // CustomField[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([userId])
}
